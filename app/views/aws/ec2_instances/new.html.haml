%h1 Create EC2 Instance

= simple_form_for [:aws, @ec2_instance], url: aws_ec2_instances_path(team_id: params[:team_id]) do |f|
  = f.input :name, hint: 'must start with a letter, only alphanumeric and hyphen characters are accepted'
  = f.input :domain

  - if @team
    = f.input :environment_id, collection: @environments
    = link_to "Create a new environment", new_team_environment_url(@team)
  - else
    = f.input :environment_id, collection: @grouped_environments, as: :grouped_select, group_method: :second, group_label_method: :first

  = f.label :team_name, 'Team: ' + (@team_name || '')

  = f.association :instance_role, collection: @instance_roles, label_method: :display_name

  = f.input :run_list, as: :text, wrapper_html: { class: 'instance_role_subvalue' }

  = f.input :ami, collection: @ec2_adapter.amis, as: :grouped_select, group_method: :second, group_label_method: :first, wrapper_html: { class: 'instance_role_subvalue' }
  - if policy(@ec2_instance).custom_ami?
    .custom_ami.instance_role_subvalue{data: {'remote-url' => aws_ec2_ami_url(':id')}}
      = label_tag :custom_ami, 'Custom AMI'
      = text_field_tag :custom_ami, @ec2_instance.ami
      .details
        %h6
          .row
            .span1
              Name:
            .span7
              #name{data: {value: :name}}
          .row
            .span1
              by
            .span2
              #owner_alias{data: {value: :image_owner_alias}}
            .span2
              #owner_by{data: {value: :image_owner_id}}
          .row
            .span1
              OS:
            .span3
              #platform{data: {value: :platform}}

  - if @price_list
    = f.input :flavor, wrapper_html: { class: 'instance_role_subvalue' } do
      = f.select :flavor, @price_list.map { |r| [r.first, r.first, { :data => { 'windows-price' => r.last["windows_price"], 'linux-price' => r.last["linux_price"], 'cores' => r.last["virtual_cores"], 'ram' => r.last["ram"] }}]}, include_blank: true
    = render 'shared/ec2_instance_flavor_details'
  - else
    = f.input :flavor, collection: @ec2_adapter.flavors.keys, wrapper_html: { class: 'instance_role_subvalue' }

  = f.input :subnet_id, collection: @ec2_adapter.subnets, wrapper_html: { class: 'instance_role_subvalue' }

  = f.input :security_group_ids, collection: @ec2_adapter.security_groups, as: 'check_boxes', wrapper_html: { class: 'instance_role_subvalue' }

  %br
  = f.submit "Create"
